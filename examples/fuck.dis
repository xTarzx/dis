- brainfuck program 30
@ fuck.bf

- stack 510
- sp
mov 0 &420

- program memory 512
- mp
mov 0 &4
- ip
mov 0 &5

LOOP:
mov &5 #0
add 30 #0

cmp 0 &#0
jeq END

CHECK_PLUS:
cmp .+ &#0
jne CHECK_MINUS
run load_data_ptr_to_r1
add 1 &#1
jmp NEXT

CHECK_MINUS:
cmp .- &#0
jne CHECK_AL
run load_data_ptr_to_r1
sub 1 &#1
jmp NEXT

CHECK_AL:
cmp .< &#0
jne CHECK_AR
sub 1 &4
jmp NEXT

CHECK_AR:
cmp .> &#0
jne CHECK_DOT
add 1 &4
jmp NEXT

CHECK_DOT:
cmp .. &#0
jne CHECK_OB
run load_data_ptr_to_r1
out &#1
jmp NEXT

CHECK_OB:
cmp .[ &#0
jne CHECK_CB
run load_data_ptr_to_r1
cmp 0 &#1
- not zero continue normal
jne NEXT
- jump to matching closing bracket
run set_addr_to_matching_close
jmp NEXT

CHECK_CB:
cmp .] &#0
jne CHECK_COMMA
run load_data_ptr_to_r1
cmp 0 &#1
- zero continue
jeq NEXT
- jump to matching open bracket
run set_addr_to_matching_open
jmp NEXT

CHECK_COMMA:
NEXT:
add 1 &5
jmp LOOP

END:
out 10
die


load_data_ptr_to_r1:
mov &4 #1
add 512 #1
ret


set_addr_to_matching_close:
add 1 &5
mov &5 #0
add 30 #0

cmp .[ &#0
jne MC_NOT_OPEN
add 1 &420
jmp set_addr_to_matching_close

MC_NOT_OPEN:
cmp .] &#0
jne set_addr_to_matching_close

cmp 0 &420
jne im_running_out_of_name_ideas
ret

im_running_out_of_name_ideas:
sub 1 &420
jmp set_addr_to_matching_close


set_addr_to_matching_open:
sub 1 &5
mov &5 #0
add 30 #0

cmp .] &#0
jne MO_NOT_CLOSE
add 1 &420
jmp set_addr_to_matching_open

MO_NOT_CLOSE:
cmp .[ &#0
jne set_addr_to_matching_open

cmp 0 &420
jne im_running_out_of_name_ideas_2
ret

im_running_out_of_name_ideas_2:
sub 1 &420
jmp set_addr_to_matching_open
